<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teches on Zhu Xingda</title>
    <link>https://blog.xingda.space/tech/</link>
    <description>Recent content in Teches on Zhu Xingda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 12 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.xingda.space/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些常见传统算法的 golang 实现</title>
      <link>https://blog.xingda.space/tech/algorithem_case_notebook/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.xingda.space/tech/algorithem_case_notebook/</guid>
      <description>数组 快排 树 大顶堆/小顶堆 红黑树 </description>
    </item>
    <item>
      <title>【Flink 基础】Data Source API 结构及实现</title>
      <link>https://blog.xingda.space/tech/flink_source_api/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.xingda.space/tech/flink_source_api/</guid>
      <description>&lt;p&gt;Flink 1.11 引入新的 &lt;strong&gt;Data Source API&lt;/strong&gt; 以取代 &lt;strong&gt;SourceFunction&lt;/strong&gt; 接口，本文将简述其结构，以便针对某个数据源开发自定义的 Source 连接器。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【Flink 基础】Flink Kubernetes Application Mode 启动分析</title>
      <link>https://blog.xingda.space/tech/flink_kubernetes_application_mode/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.xingda.space/tech/flink_kubernetes_application_mode/</guid>
      <description>&lt;p&gt;分析 Flink 在 Kubernetes Application Mode 下启动任务的过程&lt;/p&gt;</description>
    </item>
    <item>
      <title>【Flink 基础】Fault Tolerance 实现原理</title>
      <link>https://blog.xingda.space/tech/flink_fault_tolerance/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.xingda.space/tech/flink_fault_tolerance/</guid>
      <description>&lt;p&gt;Flink 是如何在程序异常结束后恢复的，本文简述一下其中的原理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【Flink 基础】Taskmanager 内存管理</title>
      <link>https://blog.xingda.space/tech/flink_memory_management/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.xingda.space/tech/flink_memory_management/</guid>
      <description>&lt;p&gt;Flink Taskmanager 的内存划分和调整策略。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
